{"version":3,"sources":["components/Note.js","services/notes.js","components/Error.js","components/Footer.js","components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","map","find","n","changeNote","returnedNote","catch","error","setTimeout","toogleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcac2a41.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\n\n// const baseUrl = \"http://localhost:3001/notes\";\n// const baseUrl = \"http://localhost:3001/api/notes\";\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default { getAll, create, update };\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import React from \"react\";\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note App locooo, Departamento de Computachion y Chienchia universida'\n        Tentuki\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\nimport Note from \"./Note\";\nimport noteService from \"../services/notes\";\nimport Notification from \"./Error\";\nimport Footer from \"./Footer\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"...new Notote\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    console.log(\"Efect\");\n    noteService.getAll().then((initialNotes) => {\n      console.log(\"promise fulfilled\");\n      setNotes(initialNotes);\n    });\n  }, []);\n  console.log(\"render\", notes.length, \"notes\");\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const toogleImportanceOf = (id) => {\n    console.log(`importance of ${id}, needs to be toggled`);\n    // const url = `http://localhost:3001/notes/${id}`;\n    const note = notes.find((n) => n.id === id);\n    const changeNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changeNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((error) => {\n        console.log(error);\n        setErrorMessage(`Note ${note.content} was already deleted from server`);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toogleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}